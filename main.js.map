{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/main-content/main-content-editdialog.component.css","webpack:///./src/app/main-content/main-content-editdialog.component.html","webpack:///./src/app/main-content/main-content-editdialog.component.ts","webpack:///./src/app/main-content/main-content.component.css","webpack:///./src/app/main-content/main-content.component.html","webpack:///./src/app/main-content/main-content.component.ts","webpack:///./src/app/tasks.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-main-content></app-main-content>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'todo-app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n//Material components\r\nimport {\r\n  MatButtonModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatListModule,\r\n  MatIconModule,\r\n  MatDialogModule,\r\n  MatCheckboxModule\r\n} from '@angular/material'\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MainContentComponent } from './main-content/main-content.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MainContentEditdialogComponent } from './main-content/main-content-editdialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainContentComponent,\r\n    MainContentEditdialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MatCheckboxModule\r\n  ],\r\n\r\n  entryComponents: [\r\n    MainContentEditdialogComponent\r\n  ],\r\n\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4tY29udGVudC9tYWluLWNvbnRlbnQtZWRpdGRpYWxvZy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1 mat-dialog-title>Hi there!</h1>\\r\\n<div mat-dialog-content>\\r\\n  <p>Change task?</p>\\r\\n  <p>{{data.task}}</p>\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Change this task to\\\" [(ngModel)]=\\\"data.task\\\">\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button [mat-dialog-close]>No Thanks</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>Ok</button>\\r\\n</div>\"","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Task } from '../task';\r\n\r\n\r\n@Component({\r\n  selector: 'app-main-content-editdialog',\r\n  templateUrl: './main-content-editdialog.component.html',\r\n  styleUrls: ['./main-content-editdialog.component.css']\r\n})\r\nexport class MainContentEditdialogComponent {\r\n  \r\n  constructor(\r\n    public dialogRef: MatDialogRef<MainContentEditdialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Task    \r\n  ) { }\r\n}","module.exports = \".main-input{\\r\\n    width: 50%;\\r\\n    margin: 10px auto;\\r\\n    /*\\r\\n    outline-style: solid;\\r\\n    outline-color: red;\\r\\n    */\\r\\n    display: flex;\\r\\n    flex-direction: column;    \\r\\n}\\r\\n\\r\\n.main-list {\\r\\n    width: 50%;\\r\\n    text-align: center;\\r\\n    margin: 10px auto;\\r\\n}\\r\\n\\r\\n.main-list .main-list__items {\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.deleteBtn {\\r\\n    margin: 0 10px;    \\r\\n}\\r\\n\\r\\n.deleteBtn:hover,\\r\\n.deleteBtn:active {\\r\\n    background: #f44336;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi1jb250ZW50L21haW4tY29udGVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtJQUNWLGlCQUFpQjtJQUNqQjs7O0tBR0M7SUFDRCxhQUFhO0lBQ2Isc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLGtCQUFrQjtJQUNsQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBOztJQUVJLG1CQUFtQjtBQUN2QiIsImZpbGUiOiJzcmMvYXBwL21haW4tY29udGVudC9tYWluLWNvbnRlbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYWluLWlucHV0e1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIG1hcmdpbjogMTBweCBhdXRvO1xyXG4gICAgLypcclxuICAgIG91dGxpbmUtc3R5bGU6IHNvbGlkO1xyXG4gICAgb3V0bGluZS1jb2xvcjogcmVkO1xyXG4gICAgKi9cclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyAgICBcclxufVxyXG5cclxuLm1haW4tbGlzdCB7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luOiAxMHB4IGF1dG87XHJcbn1cclxuXHJcbi5tYWluLWxpc3QgLm1haW4tbGlzdF9faXRlbXMge1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG5cclxuLmRlbGV0ZUJ0biB7XHJcbiAgICBtYXJnaW46IDAgMTBweDsgICAgXHJcbn1cclxuXHJcbi5kZWxldGVCdG46aG92ZXIsXHJcbi5kZWxldGVCdG46YWN0aXZlIHtcclxuICAgIGJhY2tncm91bmQ6ICNmNDQzMzY7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"main-input\\\">\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Input task\\\" [formControl]=\\\"task\\\">\\r\\n  </mat-form-field>\\r\\n  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"addItem()\\\">Add</button>\\r\\n</div>\\r\\n<div class=\\\"main-list\\\">\\r\\n  Here is what you should do:\\r\\n  <mat-nav-list>\\r\\n    <mat-list-item *ngFor=\\\"let todo of tasks\\\">\\r\\n      <a matLine href=\\\"#\\\">{{ todo.task }}</a>\\r\\n      <mat-checkbox [(ngModel)]=\\\"todo.isDone\\\">Done</mat-checkbox>\\r\\n      <button mat-icon-button (click)=\\\"editTask(todo)\\\">\\r\\n        <mat-icon>edit</mat-icon>\\r\\n      </button>\\r\\n      <a mat-icon-button (click)=\\\"deleteTask(todo)\\\" class=\\\"deleteBtn\\\">\\r\\n        <mat-icon>delete</mat-icon>\\r\\n      </a>\\r\\n    </mat-list-item>\\r\\n  </mat-nav-list>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material';\r\nimport { MainContentEditdialogComponent } from './main-content-editdialog.component';\r\nimport { Task } from '../task';\r\nimport { TasksService } from '../tasks.service';\r\nimport { compare } from 'fast-json-patch'\r\n\r\n@Component({\r\n  selector: 'app-main-content',\r\n  templateUrl: './main-content.component.html',\r\n  styleUrls: ['./main-content.component.css']\r\n})\r\nexport class MainContentComponent implements OnInit {\r\n\r\n\r\n  task = new FormControl('');\r\n  tasks: Task[] = [];\r\n\r\n  constructor(public dialog: MatDialog, private tasksService: TasksService) { }\r\n\r\n  ngOnInit() {\r\n    //Load all tasks\r\n    this.getTasks();\r\n  }\r\n\r\n  getTasks() {\r\n    this.tasksService.getAllTasks().subscribe(\r\n      data => {        \r\n        this.tasks = data;\r\n        console.warn('Data was fetched');        \r\n      },\r\n      err => {\r\n        //Something went wrong\r\n        console.error(err);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  addItem() {\r\n    //If nothing was inputed do nothing too\r\n    if (!this.task.value) {\r\n      return;\r\n    }\r\n    //Instanciate new task\r\n    let newTask: Task = {\r\n      task: this.task.value,\r\n      isDone: false\r\n    }\r\n    this.tasksService.addTask(newTask).subscribe(\r\n      (data: Task) => {\r\n        console.warn('New rask posted: ', data);\r\n        //Reload list of tasks\r\n        this.getTasks();\r\n      },\r\n      err => {\r\n        console.error(err);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  deleteTask(task) {\r\n    this.tasksService.deleteTask(task).subscribe(       \r\n      () => {\r\n        console.warn('Task was deleted!');\r\n        //Reload list of tasks\r\n        this.getTasks();\r\n      },\r\n      err => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  editTask(task: Task) {\r\n    //Create dialog-box and transfer task as data in it\r\n    const dialogRef = this.dialog.open(MainContentEditdialogComponent, {\r\n      height: '400px',\r\n      width: '600px',\r\n      restoreFocus: false,\r\n      data: {id:task.id ,task: task.task, isDone: task.isDone}\r\n    });\r\n    //What to do after dialog-box closes\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      //If result is null, then do nothing(good boy, just test windows opening)\r\n      if (!result) {\r\n        return;\r\n      };\r\n      //console.warn('Dialog-box result: ',result);\r\n      //Compare tasks befor and after edit\r\n      let body = compare(task,result);\r\n      console.log('This is what go to body: ', body);\r\n      if (!body.length){\r\n        return;\r\n      }\r\n      //If receive data - go PATCH it!\r\n      this.tasksService.editPathcTask(task.id, body).subscribe(\r\n        () =>{\r\n          console.warn('Patching succesfull!')          \r\n          //Reload list of tasks\r\n          this.getTasks();\r\n        },\r\n        err =>{          \r\n          console.error(err);\r\n        }\r\n      );      \r\n    });\r\n\r\n    \r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Task } from './task';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TasksService {\r\n\r\n  private baseUrl = \"http://localhost:5000/api\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllTasks(): Observable<Task[]> {\r\n    return this.http.get<Task[]>(this.baseUrl+'/tasks');\r\n  }\r\n\r\n  addTask(task: Task) {\r\n    return this.http.post<Task>(this.baseUrl+'/tasks',task, httpOptions);\r\n  }\r\n\r\n  deleteTask(task: Task){\r\n    return this.http.delete(this.baseUrl+`/tasks/${task.id}`, httpOptions);\r\n  }\r\n\r\n  editPathcTask(id: number, body: any) {\r\n    // let body = {\r\n    //   \"isDone\": true\r\n    // }\r\n    // const body = new HttpParams()\r\n    // .set('isDone','true');\r\n    console.warn('This is received in body: ', body);\r\n    \r\n    return this.http.patch(this.baseUrl+`/tasks/${id}`,body);\r\n  }\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}